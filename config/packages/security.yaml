<<<<<<< HEAD
#    Le fichier de configuration security. yml décrit les règles d'authentification et d'autorisation pour une application symfony. Les informations de configuration du fichier security. yml sont utilisés par la classe du factory user ( sfBasicSecurityUser par défaut).
=======
>>>>>>> 9dea6b5 (commit_Admin_Guest)
security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
<<<<<<< HEAD
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
        # used to reload user from session & other features (e.g. switch_user)
=======
        users_in_memory: { memory: null }
>>>>>>> 9dea6b5 (commit_Admin_Guest)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
<<<<<<< HEAD
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                default_target_path: app_login
            logout:
                path: app_logout
                # where to redirect after logout
                target: articles_list_db
=======
            provider: users_in_memory
>>>>>>> 9dea6b5 (commit_Admin_Guest)

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
<<<<<<< HEAD
         - { path: ^/admin, roles: ROLE_ADMIN }
#        Attention a la casse eviter majuscule admin non pas Admin
=======
        # - { path: ^/Admin, roles: ROLE_ADMIN }
>>>>>>> 9dea6b5 (commit_Admin_Guest)
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
<<<<<<< HEAD
                cost: 4 # Lowest possible value for bcrypt   // modification du hashage se fait ici
=======
                cost: 4 # Lowest possible value for bcrypt
>>>>>>> 9dea6b5 (commit_Admin_Guest)
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
